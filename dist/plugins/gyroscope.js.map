{"version":3,"file":"gyroscope.js","sources":["../../three-examples/controls/DeviceOrientationControls.js","../../src/plugins/gyroscope/GyroscopeButton.js","../../src/plugins/gyroscope/index.js"],"sourcesContent":["import {\n\tEuler,\n\tEventDispatcher,\n\tMathUtils,\n\tQuaternion,\n\tVector3\n} from 'three';\n\nconst _zee = new Vector3( 0, 0, 1 );\nconst _euler = new Euler();\nconst _q0 = new Quaternion();\nconst _q1 = new Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\nconst _changeEvent = { type: 'change' };\n\nclass DeviceOrientationControls extends EventDispatcher {\n\n\tconstructor( object ) {\n\n\t\tsuper();\n\n\t\tif ( window.isSecureContext === false ) {\n\n\t\t\tconsole.error( 'THREE.DeviceOrientationControls: DeviceOrientationEvent is only available in secure contexts (https)' );\n\n\t\t}\n\n\t\tconst scope = this;\n\n\t\tconst EPS = 0.000001;\n\t\tconst lastQuaternion = new Quaternion();\n\n\t\tthis.object = object;\n\t\tthis.object.rotation.reorder( 'YXZ' );\n\n\t\tthis.enabled = true;\n\n\t\tthis.deviceOrientation = {};\n\t\tthis.screenOrientation = 0;\n\n\t\tthis.alphaOffset = 0; // radians\n\n\t\tconst onDeviceOrientationChangeEvent = function ( event ) {\n\n\t\t\tscope.deviceOrientation = event;\n\n\t\t};\n\n\t\tconst onScreenOrientationChangeEvent = function () {\n\n\t\t\tscope.screenOrientation = window.orientation || 0;\n\n\t\t};\n\n\t\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\t\tconst setObjectQuaternion = function ( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\t_euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( _euler ); // orient the device\n\n\t\t\tquaternion.multiply( _q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( _q0.setFromAxisAngle( _zee, - orient ) ); // adjust for screen orientation\n\n\t\t};\n\n\t\tthis.connect = function () {\n\n\t\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\t\t// iOS 13+\n\n\t\t\tif ( window.DeviceOrientationEvent !== undefined && typeof window.DeviceOrientationEvent.requestPermission === 'function' ) {\n\n\t\t\t\twindow.DeviceOrientationEvent.requestPermission().then( function ( response ) {\n\n\t\t\t\t\tif ( response == 'granted' ) {\n\n\t\t\t\t\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent );\n\t\t\t\t\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent );\n\n\t\t\t\t\t}\n\n\t\t\t\t} ).catch( function ( error ) {\n\n\t\t\t\t\tconsole.error( 'THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:', error );\n\n\t\t\t\t} );\n\n\t\t\t} else {\n\n\t\t\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent );\n\t\t\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent );\n\n\t\t\t}\n\n\t\t\tscope.enabled = true;\n\n\t\t};\n\n\t\tthis.disconnect = function () {\n\n\t\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent );\n\t\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent );\n\n\t\t\tscope.enabled = false;\n\n\t\t};\n\n\t\tthis.update = function () {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tconst device = scope.deviceOrientation;\n\n\t\t\tif ( device ) {\n\n\t\t\t\tconst alpha = device.alpha ? MathUtils.degToRad( device.alpha ) + scope.alphaOffset : 0; // Z\n\n\t\t\t\tconst beta = device.beta ? MathUtils.degToRad( device.beta ) : 0; // X'\n\n\t\t\t\tconst gamma = device.gamma ? MathUtils.degToRad( device.gamma ) : 0; // Y''\n\n\t\t\t\tconst orient = scope.screenOrientation ? MathUtils.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\t\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\n\t\t\t\tif ( 8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.disconnect();\n\n\t\t};\n\n\t\tthis.connect();\n\n\t}\n\n}\n\nexport { DeviceOrientationControls };\n","import { AbstractButton } from '../..';\nimport compass from './compass.svg';\nimport { GyroscopePlugin } from './index';\n\n/**\n * @summary Navigation bar gyroscope button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class GyroscopeButton extends AbstractButton {\n\n  static id = 'gyroscope';\n  static icon = compass;\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, 'psv-button--hover-scale psv-gyroscope-button', true);\n\n    /**\n     * @type {PSV.plugins.GyroscopePlugin}\n     * @readonly\n     * @private\n     */\n    this.plugin = this.psv.getPlugin(GyroscopePlugin.id);\n\n    if (this.plugin) {\n      this.plugin.on(GyroscopePlugin.EVENTS.GYROSCOPE_UPDATED, this);\n    }\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    if (this.plugin) {\n      this.plugin.off(GyroscopePlugin.EVENTS.GYROSCOPE_UPDATED, this);\n    }\n\n    delete this.plugin;\n\n    super.destroy();\n  }\n\n  /**\n   * @override\n   */\n  isSupported() {\n    return !this.plugin ? false : { initial: false, promise: this.plugin.prop.isSupported };\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    if (e.type === GyroscopePlugin.EVENTS.GYROSCOPE_UPDATED) {\n      this.toggleActive(e.args[0]);\n    }\n  }\n\n  /**\n   * @override\n   * @description Toggles gyroscope control\n   */\n  onClick() {\n    this.plugin.toggle();\n  }\n\n}\n","import * as THREE from 'three';\nimport { DeviceOrientationControls } from 'three/examples/jsm/controls/DeviceOrientationControls';\nimport { AbstractPlugin, CONSTANTS, DEFAULTS, registerButton, utils } from '../..';\nimport { GyroscopeButton } from './GyroscopeButton';\n\n\n/**\n * @typedef {Object} PSV.plugins.GyroscopePlugin.Options\n * @property {boolean} [touchmove=true] - allows to pan horizontally when the gyroscope is enabled (requires global `mousemove=true`)\n * @property {boolean} [absolutePosition=false] - when true the view will ignore the current direction when enabling gyroscope control\n */\n\n\n// add gyroscope button\nDEFAULTS.navbar.splice(-1, 0, GyroscopeButton.id);\nDEFAULTS.lang[GyroscopeButton.id] = 'Gyroscope';\nregisterButton(GyroscopeButton);\n\nconst direction = new THREE.Vector3();\n\n/**\n * @summary Adds gyroscope controls on mobile devices\n * @extends PSV.plugins.AbstractPlugin\n * @memberof PSV.plugins\n */\nexport class GyroscopePlugin extends AbstractPlugin {\n\n  static id = 'gyroscope';\n\n  /**\n   * @summary Available events\n   * @enum {string}\n   * @memberof PSV.plugins.GyroscopePlugin\n   * @constant\n   */\n  static EVENTS = {\n    /**\n     * @event gyroscope-updated\n     * @memberof PSV.plugins.GyroscopePlugin\n     * @summary Triggered when the gyroscope mode is enabled/disabled\n     * @param {boolean} enabled\n     */\n    GYROSCOPE_UPDATED: 'gyroscope-updated',\n  };\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.plugins.GyroscopePlugin.Options} options\n   */\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @member {Object}\n     * @private\n     * @property {Promise<boolean>} isSupported - indicates of the gyroscope API is available\n     * @property {number} alphaOffset - current alpha offset for gyroscope controls\n     * @property {boolean} enabled\n     * @property {boolean} config_moveInertia - original config \"moveInertia\"\n     */\n    this.prop = {\n      isSupported       : this.__checkSupport(),\n      alphaOffset       : 0,\n      enabled           : false,\n      config_moveInertia: true,\n    };\n\n    /**\n     * @member {PSV.plugins.GyroscopePlugin.Options}\n     * @private\n     */\n    this.config = {\n      touchmove       : true,\n      absolutePosition: false,\n      ...options,\n    };\n\n    /**\n     * @member {external:THREE.DeviceOrientationControls}\n     * @private\n     */\n    this.controls = null;\n\n    this.psv.on(CONSTANTS.EVENTS.STOP_ALL, this);\n    this.psv.on(CONSTANTS.EVENTS.BEFORE_ROTATE, this);\n    this.psv.on(CONSTANTS.EVENTS.BEFORE_RENDER, this);\n  }\n\n  /**\n   * @package\n   */\n  destroy() {\n    this.psv.off(CONSTANTS.EVENTS.STOP_ALL, this);\n    this.psv.off(CONSTANTS.EVENTS.BEFORE_ROTATE, this);\n    this.psv.off(CONSTANTS.EVENTS.BEFORE_RENDER, this);\n\n    this.stop();\n\n    delete this.controls;\n    delete this.prop;\n\n    super.destroy();\n  }\n\n  /**\n   * @private\n   */\n  handleEvent(e) {\n    switch (e.type) {\n      case CONSTANTS.EVENTS.STOP_ALL:\n        this.stop();\n        break;\n      case CONSTANTS.EVENTS.BEFORE_RENDER:\n        this.__onBeforeRender();\n        break;\n      case CONSTANTS.EVENTS.BEFORE_ROTATE:\n        this.__onBeforeRotate(e);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * @summary Checks if the gyroscope is enabled\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.prop.enabled;\n  }\n\n  /**\n   * @summary Enables the gyroscope navigation if available\n   * @returns {Promise}\n   * @fires PSV.plugins.GyroscopePlugin.gyroscope-updated\n   * @throws {PSV.PSVError} if the gyroscope API is not available/granted\n   */\n  start() {\n    return this.prop.isSupported\n      .then((supported) => {\n        if (supported) {\n          return this.__requestPermission();\n        }\n        else {\n          utils.logWarn('gyroscope not available');\n          return Promise.reject();\n        }\n      })\n      .then((granted) => {\n        if (granted) {\n          return Promise.resolve();\n        }\n        else {\n          utils.logWarn('gyroscope not allowed');\n          return Promise.reject();\n        }\n      })\n      .then(() => {\n        this.psv.__stopAll();\n\n        // disable inertia\n        this.prop.config_moveInertia = this.psv.config.moveInertia;\n        this.psv.config.moveInertia = false;\n\n        // enable gyro controls\n        if (!this.controls) {\n          this.controls = new DeviceOrientationControls(new THREE.Object3D());\n        }\n        else {\n          this.controls.connect();\n        }\n\n        // force reset\n        this.controls.deviceOrientation = null;\n        this.controls.screenOrientation = 0;\n        this.controls.alphaOffset = 0;\n\n        this.prop.alphaOffset = this.config.absolutePosition ? 0 : null;\n        this.prop.enabled = true;\n\n        this.trigger(GyroscopePlugin.EVENTS.GYROSCOPE_UPDATED, true);\n      });\n  }\n\n  /**\n   * @summary Disables the gyroscope navigation\n   * @fires PSV.plugins.GyroscopePlugin.gyroscope-updated\n   */\n  stop() {\n    if (this.isEnabled()) {\n      this.controls.disconnect();\n\n      this.prop.enabled = false;\n      this.psv.config.moveInertia = this.prop.config_moveInertia;\n\n      this.trigger(GyroscopePlugin.EVENTS.GYROSCOPE_UPDATED, false);\n    }\n  }\n\n  /**\n   * @summary Enables or disables the gyroscope navigation\n   */\n  toggle() {\n    if (this.isEnabled()) {\n      this.stop();\n    }\n    else {\n      this.start();\n    }\n  }\n\n  /**\n   * @summary Handles gyro movements\n   * @private\n   */\n  __onBeforeRender() {\n    if (!this.isEnabled()) {\n      return;\n    }\n\n    if (!this.controls.deviceOrientation) {\n      return;\n    }\n\n    // on first run compute the offset depending on the current viewer position and device orientation\n    if (this.prop.alphaOffset === null) {\n      this.controls.update();\n      this.controls.object.getWorldDirection(direction);\n\n      const sphericalCoords = this.psv.dataHelper.vector3ToSphericalCoords(direction);\n      this.prop.alphaOffset = sphericalCoords.longitude - this.psv.getPosition().longitude;\n    }\n    else {\n      this.controls.alphaOffset = this.prop.alphaOffset;\n      this.controls.update();\n      this.controls.object.getWorldDirection(direction);\n\n      const sphericalCoords = this.psv.dataHelper.vector3ToSphericalCoords(direction);\n      // TODO use dynamic goto for smooth movement\n      this.psv.dynamics.position.setValue({\n        longitude: sphericalCoords.longitude,\n        latitude : -sphericalCoords.latitude,\n      });\n    }\n  }\n\n  /**\n   * @summary Intercepts moves and offsets the alpha angle\n   * @param {external:uEvent.Event} e\n   * @private\n   */\n  __onBeforeRotate(e) {\n    if (this.isEnabled()) {\n      e.preventDefault();\n\n      if (this.config.touchmove) {\n        this.prop.alphaOffset -= e.args[0].longitude - this.psv.getPosition().longitude;\n      }\n    }\n  }\n\n  /**\n   * @summary Detects if device orientation is supported\n   * @returns {Promise<boolean>}\n   * @private\n   */\n  __checkSupport() {\n    if ('DeviceMotionEvent' in window && typeof DeviceMotionEvent.requestPermission === 'function') {\n      return Promise.resolve(true);\n    }\n    else if ('DeviceOrientationEvent' in window) {\n      return new Promise((resolve) => {\n        const listener = (e) => {\n          resolve(e && e.alpha !== null && !isNaN(e.alpha));\n\n          window.removeEventListener('deviceorientation', listener);\n        };\n\n        window.addEventListener('deviceorientation', listener, false);\n\n        // after 2 secs, auto-reject the promise\n        setTimeout(listener, 2000);\n      });\n    }\n    else {\n      return Promise.resolve(false);\n    }\n  }\n\n  /**\n   * @summary Request permission to the motion API\n   * @returns {Promise<boolean>}\n   * @private\n   */\n  __requestPermission() {\n    if ('DeviceMotionEvent' in window && typeof DeviceMotionEvent.requestPermission === 'function') {\n      return DeviceOrientationEvent.requestPermission()\n        .then(response => response === 'granted')\n        .catch(() => false);\n    }\n    else {\n      return Promise.resolve(true);\n    }\n  }\n\n}\n"],"names":["_zee","Vector3","_euler","Euler","_q0","Quaternion","_q1","Math","sqrt","_changeEvent","type","DeviceOrientationControls","EventDispatcher","constructor","object","window","isSecureContext","console","error","scope","EPS","lastQuaternion","rotation","reorder","enabled","deviceOrientation","screenOrientation","alphaOffset","onDeviceOrientationChangeEvent","event","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","quaternion","alpha","beta","gamma","orient","set","setFromEuler","multiply","setFromAxisAngle","connect","DeviceOrientationEvent","undefined","requestPermission","then","response","addEventListener","catch","disconnect","removeEventListener","update","device","MathUtils","degToRad","dot","copy","dispatchEvent","dispose","GyroscopeButton","navbar","plugin","psv","getPlugin","GyroscopePlugin","id","on","EVENTS","GYROSCOPE_UPDATED","destroy","off","isSupported","initial","promise","prop","handleEvent","e","toggleActive","args","onClick","toggle","AbstractButton","icon","compass","DEFAULTS","splice","lang","registerButton","direction","THREE","options","__checkSupport","config_moveInertia","config","touchmove","absolutePosition","controls","CONSTANTS","STOP_ALL","BEFORE_ROTATE","BEFORE_RENDER","stop","__onBeforeRender","__onBeforeRotate","isEnabled","start","supported","__requestPermission","utils","logWarn","Promise","reject","granted","resolve","__stopAll","moveInertia","Object3D","trigger","getWorldDirection","sphericalCoords","dataHelper","vector3ToSphericalCoords","longitude","getPosition","dynamics","position","setValue","latitude","preventDefault","DeviceMotionEvent","listener","isNaN","setTimeout","AbstractPlugin"],"mappings":"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"}