{"version":3,"file":"resolution.js","sources":["../../src/plugins/resolution/constants.js","../../src/plugins/resolution/utils.js","../../src/plugins/resolution/index.js"],"sourcesContent":["/**\n * @summary Available events\n * @enum {string}\n * @memberof PSV.plugins.ResolutionPlugin\n * @constant\n */\nexport const EVENTS = {\n  /**\n   * @event resolution-changed\n   * @memberof PSV.plugins.ResolutionPlugin\n   * @summary Triggered when the resolution is changed\n   * @param {string} resolutionId\n   */\n  RESOLUTION_CHANGED: 'resolution-changed',\n};\n","/**\n * @summary Returns deep equality between objects\n * {@link https://gist.github.com/egardner/efd34f270cc33db67c0246e837689cb9}\n * @param obj1\n * @param obj2\n * @return {boolean}\n * @private\n */\nexport function deepEqual(obj1, obj2) {\n  if (obj1 === obj2) {\n    return true;\n  }\n  else if (isObject(obj1) && isObject(obj2)) {\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n      return false;\n    }\n    for (const prop of Object.keys(obj1)) {\n      if (!deepEqual(obj1[prop], obj2[prop])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  else {\n    return false;\n  }\n}\n\nfunction isObject(obj) {\n  return typeof obj === 'object' && obj != null;\n}\n","import { AbstractPlugin, CONSTANTS, DEFAULTS, PSVError } from '../..';\nimport { EVENTS } from './constants';\nimport { deepEqual } from './utils';\n\n\n/**\n * @typedef {Object} PSV.plugins.ResolutionPlugin.Resolution\n * @property {string} id\n * @property {string} label\n * @property {*} panorama\n */\n\n/**\n * @typedef {Object} PSV.plugins.ResolutionPlugin.Options\n * @property {PSV.plugins.ResolutionPlugin.Resolution[]} resolutions - list of available resolutions\n */\n\n\nDEFAULTS.lang.resolution = 'Quality';\n\n\nexport { EVENTS } from './constants';\n\n\n/**\n * @summary Adds a setting to choose between multiple resolutions of the panorama.\n * @extends PSV.plugins.AbstractPlugin\n * @memberof PSV.plugins\n */\nexport class ResolutionPlugin extends AbstractPlugin {\n\n  static id = 'resolution';\n\n  /**\n   * @deprecated use the EVENTS constants of the module\n   */\n  static EVENTS = EVENTS;\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.plugins.ResolutionPlugin.Options} options\n   */\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @type {PSV.plugins.SettingsPlugin}\n     * @readonly\n     * @private\n     */\n    this.settings = null;\n\n    /**\n     * @summary Available resolutions\n     * @member {PSV.plugins.ResolutionPlugin.Resolution[]}\n     */\n    this.resolutions = [];\n\n    /**\n     * @summary Available resolutions\n     * @member {Object.<string, PSV.plugins.ResolutionPlugin.Resolution>}\n     * @private\n     */\n    this.resolutionsById = {};\n\n    /**\n     * @type {Object}\n     * @property {string} resolution - Current resolution\n     * @private\n     */\n    this.prop = {\n      resolution: null,\n    };\n\n    /**\n     * @type {PSV.plugins.ResolutionPlugin.Options}\n     */\n    this.config = {\n      ...options,\n    };\n  }\n\n  /**\n   * @package\n   */\n  init() {\n    super.init();\n\n    this.settings = this.psv.getPlugin('settings');\n\n    if (!this.settings) {\n      throw new PSVError('Resolution plugin requires the Settings plugin');\n    }\n\n    this.settings.addSetting({\n      id     : ResolutionPlugin.id,\n      type   : 'options',\n      label  : this.psv.config.lang.resolution,\n      current: () => this.prop.resolution,\n      options: () => this.__getSettingsOptions(),\n      apply  : resolution => this.setResolution(resolution),\n    });\n\n    this.psv.on(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\n\n    if (this.config.resolutions) {\n      this.setResolutions(this.config.resolutions);\n      delete this.config.resolutions;\n    }\n  }\n\n  /**\n   * @package\n   */\n  destroy() {\n    this.psv.off(CONSTANTS.EVENTS.PANORAMA_LOADED, this);\n\n    this.settings.removeSetting(ResolutionPlugin.id);\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    if (e.type === CONSTANTS.EVENTS.PANORAMA_LOADED) {\n      this.__refreshResolution();\n    }\n  }\n\n  /**\n   * @summary Changes the available resolutions\n   * @param {PSV.plugins.ResolutionPlugin.Resolution[]} resolutions\n   */\n  setResolutions(resolutions) {\n    this.resolutions = resolutions;\n    this.resolutionsById = {};\n\n    resolutions.forEach((resolution) => {\n      if (!resolution.id) {\n        throw new PSVError('Missing resolution id');\n      }\n      this.resolutionsById[resolution.id] = resolution;\n    });\n\n    this.__refreshResolution();\n  }\n\n  /**\n   * @summary Changes the current resolution\n   * @param {string} id\n   */\n  setResolution(id) {\n    if (!this.resolutionsById[id]) {\n      throw new PSVError(`Resolution ${id} unknown`);\n    }\n\n    return this.psv.setPanorama(this.resolutionsById[id].panorama, { transition: false, showLoader: false });\n  }\n\n  /**\n   * @summary Returns the current resolution\n   * @return {string}\n   */\n  getResolution() {\n    return this.prop.resolution;\n  }\n\n  /**\n   * @summary Updates current resolution on panorama load\n   * @private\n   */\n  __refreshResolution() {\n    const resolution = this.resolutions.find(r => deepEqual(this.psv.config.panorama, r.panorama));\n    if (this.prop.resolution !== resolution?.id) {\n      this.prop.resolution = resolution?.id;\n      this.trigger(EVENTS.RESOLUTION_CHANGED, this.prop.resolution);\n    }\n  }\n\n  /**\n   * @summary Returns options for Settings plugin\n   * @return {PSV.plugins.SettingsPlugin.Option[]}\n   * @private\n   */\n  __getSettingsOptions() {\n    return this.resolutions\n      .map(resolution => ({\n        id   : resolution.id,\n        label: resolution.label,\n      }));\n  }\n\n}\n"],"names":["EVENTS","RESOLUTION_CHANGED","deepEqual","obj1","obj2","isObject","Object","keys","length","prop","obj","DEFAULTS","lang","resolution","ResolutionPlugin","psv","options","settings","resolutions","resolutionsById","config","init","getPlugin","PSVError","addSetting","id","type","label","current","__getSettingsOptions","apply","setResolution","on","CONSTANTS","PANORAMA_LOADED","setResolutions","destroy","off","removeSetting","handleEvent","e","__refreshResolution","forEach","setPanorama","panorama","transition","showLoader","getResolution","find","r","trigger","map","AbstractPlugin"],"mappings":"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"}